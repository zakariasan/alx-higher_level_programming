Python 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 
>>> add_interger = __import__('0-add_integer').add_integer
>>> add_interger(1,2)
3
>>> add_interger(4,4)
8
>>> add_interger(4,-4)
0
>>> add_interger(1,-4)
-3
>>> add_interger(1,4)
5
>>> add_interger(1.01,4.2)
5
>>> add_interger(1.01,)
99
>>> add_interger(1,)
99

# Invalid test
>>> try:
...     add_interger('1', 3)
... except TypeError as e:
...     print(e)
a must be an integer
>>> try:
...     add_interger('1')
... except TypeError as err:
...     print(err)
a must be an integer
>>> try:
...     add_interger()
... except TypeError as err:
...     print(err)
... 
add_integer() missing 1 required positional argument: 'a'
>>> try:
...     add_interger(1,)
... except TypeError as err:
...     print(err)
... 
99
>>> try:
...     add_interger(float('inf'), 12)
... except TypeError as err:
...     print(err)
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    return (int(a) + int(b))
OverflowError: cannot convert float infinity to integer
>>> try:
...     add_interger(NaN, 2)
... except TypeError as err:
...     print(err)
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
NameError: name 'NaN' is not defined
>>> try:
...     add_interger(1.2, None)
... except TypeError as err:
...     print(err)
... 
b must be an integer
>>> try:
...     add_interger(1.2, float('NaN'))
... except TypeError as err:
...     print(err)
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    return (int(a) + int(b))
ValueError: cannot convert float NaN to integer

