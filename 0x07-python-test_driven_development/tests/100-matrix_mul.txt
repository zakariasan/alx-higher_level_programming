>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> m_a = [
... [1,2],
... [1,1]]
>>> m_b = m_a
>>> print(matrix_mul(m_a, m_b))
[[3, 4], [2, 3]]
>>> print(matrix_mul([[1, 1, 1], [1,1,1], [1,1,1]], [2,3,4]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 15, in matrix_mul
    raise TypeError("m_b must be a list of lists")
TypeError: m_b must be a list of lists
>>> print(matrix_mul([[1, 1, 1], [1,1,1], [1,1,1]], [[1.1, 2,3], [2, 1, 1], [1,1,2]]))
[[4.1, 4, 6], [4.1, 4, 6], [4.1, 4, 6]]
>>> print(matrix_mul([[1, 1, 1], [1,1,1], [-1,-1,-1]], [[1.1, 2,3], [2, 1, 1], [-1,-1,-2]]))
[[2.1, 2, 2], [2.1, 2, 2], [-2.1, -2, -2]]
>>> print(matrix_mul())
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
>>> print(matrix_mul('flas', [[1,2,4]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 9, in matrix_mul
    raise TypeError("m_a must be a list")
TypeError: m_a must be a list
>>> print(matrix_mul([[1]], [[1]]))
[[1]]
>>> print(matrix_mul([[1]], [[]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 19, in matrix_mul
    raise ValueError("m_b can't be empty")
ValueError: m_b can't be empty
>>> print(matrix_mul([[]], [[]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 17, in matrix_mul
    raise ValueError("m_a can't be empty")
ValueError: m_a can't be empty
>>> print(matrix_mul([[2,-1]], [[-1,2]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 33, in matrix_mul
    raise ValueError("m_a and m_b can't be multiplied")
ValueError: m_a and m_b can't be multiplied
>>> print(matrix_mul([2,-1,1], [[-1,2,1]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 13, in matrix_mul
    raise TypeError("m_a must be a list of lists")
TypeError: m_a must be a list of lists
>>> print(matrix_mul([[1,2], [3,4]], [[3, "s"], [1, 2]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 25, in matrix_mul
    raise TypeError("m_b should contain only integers or floats")
TypeError: m_b should contain only integers or floats
>>> print(matrix_mul([[1,3,4], [9, 8]], [[1,1], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 28, in matrix_mul
    raise TypeError("each row of m_a must should be of the same size")
TypeError: each row of m_a must should be of the same size
>>> print(matrix_mul([[1,3], [9, 8]], [[1,2,1], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 30, in matrix_mul
    raise TypeError("each row of m_b must should be of the same size")
TypeError: each row of m_b must should be of the same size
>>> print(matrix_mul([[1,3,4], [9,5, 8]], [[1,2], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 33, in matrix_mul
    raise ValueError("m_a and m_b can't be multiplied")
ValueError: m_a and m_b can't be multiplied
>>> print(matrix_mul([[1,3], [9, 8]], [[1,"1"], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 25, in matrix_mul
    raise TypeError("m_b should contain only integers or floats")
TypeError: m_b should contain only integers or floats
>>> print(matrix_mul([[1,3], [9, "8"]], [[1,1], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 22, in matrix_mul
    raise TypeError("m_a should contain only integers or floats")
TypeError: m_a should contain only integers or floats
>>> print(matrix_mul([[1,3], [9, 8]], [[1,1,2], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 30, in matrix_mul
    raise TypeError("each row of m_b must should be of the same size")
TypeError: each row of m_b must should be of the same size
>>> print(matrix_mul([[1,3], [9, 8,1]], [[1,1], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 28, in matrix_mul
    raise TypeError("each row of m_a must should be of the same size")
TypeError: each row of m_a must should be of the same size
>>> print(matrix_mul([[5,3], [9, 8]], [[1,"1"], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 25, in matrix_mul
    raise TypeError("m_b should contain only integers or floats")
TypeError: m_b should contain only integers or floats
>>> print(matrix_mul([[5,3,10], [9, 8]], [[1,1], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 28, in matrix_mul
    raise TypeError("each row of m_a must should be of the same size")
TypeError: each row of m_a must should be of the same size
>>> print(matrix_mul([[5,3], [9, 8]], [[1,1,1], [7,5]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 30, in matrix_mul
    raise TypeError("each row of m_b must should be of the same size")
TypeError: each row of m_b must should be of the same size
>>> print(matrix_mul([[5,6], [7, 8]], [[5,"6"], [7,8]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 25, in matrix_mul
    raise TypeError("m_b should contain only integers or floats")
TypeError: m_b should contain only integers or floats
>>> print(matrix_mul([[5,6,10], [7, 8]], [[5,6], [7,8]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 28, in matrix_mul
    raise TypeError("each row of m_a must should be of the same size")
TypeError: each row of m_a must should be of the same size
>>> print(matrix_mul([[5,6], [7, 8]], [[5,6,1], [7,8]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 30, in matrix_mul
    raise TypeError("each row of m_b must should be of the same size")
TypeError: each row of m_b must should be of the same size
>>> print(matrix_mul([[1,2,3], [3,4,5]], [[1,2], [3,4]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 33, in matrix_mul
    raise ValueError("m_a and m_b can't be multiplied")
ValueError: m_a and m_b can't be multiplied
>>> print(matrix_mul())
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
>>> print(matrix_mul([], []))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 17, in matrix_mul
    raise ValueError("m_a can't be empty")
ValueError: m_a can't be empty
>>> print(matrix_mul([[1,1]], []))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 19, in matrix_mul
    raise ValueError("m_b can't be empty")
ValueError: m_b can't be empty
>>> print(matrix_mul([["hello"]], ["try"]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 15, in matrix_mul
    raise TypeError("m_b must be a list of lists")
TypeError: m_b must be a list of lists
>>> print(matrix_mul([["hello",1]], ["try",2]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 15, in matrix_mul
    raise TypeError("m_b must be a list of lists")
TypeError: m_b must be a list of lists
>>> print(matrix_mul([["1",1]], ["3",2]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 15, in matrix_mul
    raise TypeError("m_b must be a list of lists")
TypeError: m_b must be a list of lists
>>> print(matrix_mul([[1,1]], []))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/zakplugedin/Desktop/Alx/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 19, in matrix_mul
    raise ValueError("m_b can't be empty")
ValueError: m_b can't be empty

